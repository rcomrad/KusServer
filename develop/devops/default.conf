server {
    server_name  kusjournal.ru;

    #access_log  /var/log/nginx/host.access.log  main;

    location /api {
#        proxy_pass http://localhost:18080;
#        proxy_redirect http://localhost:18080/ /;

#  proxy_read_timeout 60s;
#  proxy_set_header          Host            $host;
#  proxy_set_header          X-Real-IP       $remote_addr;
#  proxy_set_header          X-Forwarded-For $proxy_add_x_forwarded_for;

     if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
     }
     if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
     }
     if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
     }

    proxy_pass http://localhost:18080;
#    proxy_http_version 1.1;
#    proxy_redirect off;
#    proxy_set_header X-Real-IP $remote_addr;
#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    proxy_set_header Upgrade $http_upgrade;
#    proxy_set_header Connection $http_connection;
#    proxy_set_header Host $host;
#    proxy_cache_bypass $http_upgrade;
#    proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header content-type "application/json";
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Connection 'upgrade';
        # access_log /var/www/pocket-caravan.com/logs/logs.txt;

    }

    location /sus {
        return 200 " Hello from sus\n";
    }

    location /assets
    {
        root /home/rcomrad/data/front;
    }

    location ~* ^.+\.(ico)
    {
        root /home/rcomrad/data/front/assets;
        expires 30d;
    }

    location /
    {
       alias /home/rcomrad/data/front/templates/;
       try_files '' /index.html = 404;
    }

    #error_page  404              /404.html;
    
    # redirect server error pages to the static page /50x.html
    #

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/kusjournal.ru/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/kusjournal.ru/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = kusjournal.ru) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen       80;
    server_name  kusjournal.ru;
    return 404; # managed by Certbot


}
